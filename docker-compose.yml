version: '3.8'

services:
  hdl-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: hdl-ai-proteus:latest
    container_name: hdl-ai-proteus-api
    ports:
      - "${SERVER_PORT:-5000}:5000"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5000
      - SERVER_DEBUG=${SERVER_DEBUG:-false}
      - DEFAULT_PROVIDER=${DEFAULT_PROVIDER:-azure_openai}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - TEMP_DIRECTORY=/app/temp
      - EXPORT_DIRECTORY=/app/export
      - GHDL_PATH=ghdl
      - IVERILOG_PATH=iverilog
    volumes:
      - ./logs:/app/logs
      - ./export:/app/export
      - hdl_temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - hdl-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hdl-api.rule=Host(`hdl-api.localhost`)"
      - "traefik.http.services.hdl-api.loadbalancer.server.port=5000"

  # Optional: Reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: hdl-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - hdl-api
    restart: unless-stopped
    networks:
      - hdl-network
    profiles:
      - production

  # Optional: Redis for caching (future feature)
  redis:
    image: redis:7-alpine
    container_name: hdl-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - hdl-network
    profiles:
      - cache

volumes:
  hdl_temp:
    driver: local
  redis_data:
    driver: local

networks:
  hdl-network:
    driver: bridge